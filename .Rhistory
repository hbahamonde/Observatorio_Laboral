# Este script es para el Observatorio Laboral de la UOH.
## Hector Bahamonde, PhD
## Profesor Asistente, Instituto de Ciencias Sociales, UOH.
cat("\014")
rm(list=ls())
graphics.off()
# loads pacman
if (!require("pacman")) install.packages("pacman"); library(pacman)
# load data
p_load(readxl)
data <- read_excel("/Users/hectorbahamonde/research/Observatorio_Laboral/enadel.xlsx", col_names = TRUE)
# summary
hist(data$a4_1_b)
summary(data$a4_1_b)
# Recode DV: from count to binary
data$a4_1_b <- ifelse(data$a4_1_b > 0, 1, 0)
# Finding #1: No estamos tan mal.
table(data$a4_1_b)
lattice::histogram(as.factor(data$a4_1_b), main = "Porcent de Empresas con Gerentas")
# Recode Data
empresa.genero.d = data.frame(
mujeres = as.numeric(data$a4_1_b), # Cantidad de mujeres gerentas
rubro = as.numeric(as.factor(data$actividad)), # actividad
competencias = as.numeric(as.factor(data$b4a_o1_1)), # Competencias
certificacion = as.numeric(as.factor(data$b4b_o1)), # Certificacion
reclutamiento = as.numeric(as.factor(data$b6_1)) # Via de reclutamiento
)
nrow(empresa.genero.d)
table(is.na(empresa.genero.d))
table(is.na(empresa.genero.d$mujeres))
table(is.na(empresa.genero.d$certificacion))
p_load(Zelig)
z.out <- zelig(mujeres ~
rubro +
competencias +
certificacion +
reclutamiento, # incluir: tamano de la empresa (personas o $).
model = "logit",
#weights = w,
data = empresa.genero.d,
cite = F)
###############
# Modelo
###############
install.packages('zeligverse')
###############
# Modelo
###############
devtools::install_github('IQSS/Zelig')
###############
# Modelo
###############
devtools::install_github('IQSS/Zelig')
library(Zelig)
z.out <- zelig(mujeres ~
rubro +
competencias +
certificacion +
reclutamiento, # incluir: tamano de la empresa (personas o $).
model = "logit",
#weights = w,
data = empresa.genero.d,
cite = F)
summary(z.out)
z.out$data
nrows(z.out$data)
nrow(z.out$data)
nrow(z.out$outcome)
z.out$outcome
1577-3942
table(empresa.genero.d$mujeres)
prop.table(table(empresa.genero.d$mujeres))
set.seed(2020)
sim.certificacion = data.frame(
Probabilidad = c(
mean(get_qi(sim(setx(z.out, certificacion=1)))),
mean(get_qi(sim(setx(z.out, certificacion=2))))
),
Certificacion = c(
"No",
"Si"
),
lower = c(
mean(get_qi(sim(setx(z.out, certificacion=1)))) - qnorm(0.975)*sd(get_qi(sim(setx(z.out, certificacion=1))))/sqrt(length(get_qi(sim(setx(z.out, certificacion=1))))),
mean(get_qi(sim(setx(z.out, certificacion=2)))) - qnorm(0.975)*sd(get_qi(sim(setx(z.out, certificacion=2))))/sqrt(length(get_qi(sim(setx(z.out, certificacion=2)))))
),
upper = c(
mean(get_qi(sim(setx(z.out, certificacion=1)))) + qnorm(0.975)*sd(get_qi(sim(setx(z.out, certificacion=1))))/sqrt(length(get_qi(sim(setx(z.out, certificacion=1))))),
mean(get_qi(sim(setx(z.out, certificacion=2)))) + qnorm(0.975)*sd(get_qi(sim(setx(z.out, certificacion=2))))/sqrt(length(get_qi(sim(setx(z.out, certificacion=2)))))
)
)
sim.certificacion
